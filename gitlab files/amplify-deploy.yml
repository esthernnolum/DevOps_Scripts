stages:
  - build
  - deploy

build:
  stage: build
  image: node:18-alpine # Use a Docker image with Node.js and npm 
  script:
    - apk add --no-cache python3 py3-pip zip
    - pip3 install awscli --break-system-packages
    - aws --version
    - |
      echo $AWS_DEFAULT_REGION
      export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
    - echo "NEXT_PUBLIC_APP_API_BANK=https://test.com" >> .env
    - echo "NEXT_PUBLIC_APP_API_DOMAIN=https://test.com" >> .env
    - echo "NEXT_PUBLIC_APP_API_KEY=2459d19" >> .env
    - echo "NEXT_PUBLIC_APP_API_CORE=https://test.com" >> .env
    - cat .env
    # Install dependencies
    - yarn install
    - yarn build
    - yarn start
    - ls -la
    - cd .next
    - zip -r ../build.zip * ../public ../.env
    - cd ..
    - sleep 5
    - aws s3 cp build.zip s3://frontend-artifacts/artifacts/build.zip
  artifacts:
    paths:
      - build.zip
    reports:
      dotenv: .env

deploy:
  stage: deploy
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  variables:
    APP_ID: d2qarjfumpp1rf
    BRANCH_NAME: development
    SOURCE_URL: "https://frontend-artifacts.s3.eu-west-2.amazonaws.com/artifacts/build.zip"
  script:
    - aws amplify start-deployment --app-id $APP_ID --branch-name $BRANCH_NAME --source-url $SOURCE_URL
  needs:
    - build
  only:
    - development
